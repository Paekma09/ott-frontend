openapi: 3.0.1
info:
  title: OTT API
  description: 동영상 OTT 서비스 API 문서
  version: v1.0.0
servers:
- url: http://localhost:8080
  description: Generated server url
security:
- BearerAuth: []
tags:
- name: 동영상
  description: 동영상 관련 API
- name: 동영상파일
  description: 동영상 파일 업로드/다운로드(스트리밍) API
- name: 회원
  description: 회원가입/로그인/JWT 인증 API
paths:
  /api/videos/file/upload:
    post:
      tags:
      - 동영상파일
      summary: 동영상 파일 업로드
      description: 동영상 파일과 메타데이터를 업로드하고 DB에 등록합니다.
      operationId: uploadVideo
      parameters:
      - name: title
        in: query
        required: true
        schema:
          type: string
      - name: description
        in: query
        required: false
        schema:
          type: string
      - name: userId
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/users/signup:
    post:
      tags:
      - 회원
      summary: 회원가입
      description: 신규 회원을 등록합니다.
      operationId: signup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserSignupRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDto"
  /api/users/login:
    post:
      tags:
      - 회원
      summary: 로그인
      description: 로그인 성공시 JWT 토큰을 반환합니다.
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLoginRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/videos:
    get:
      tags:
      - 동영상
      summary: 동영상 목록 조회
      description: 등록된 모든 동영상을 최신순으로 조회합니다.
      operationId: getVideoList
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/VideoDto"
  /api/videos/{id}:
    get:
      tags:
      - 동영상
      summary: 동영상 상세 조회
      description: 동영상 ID로 특정 동영상을 조회합니다.
      operationId: getVideoDetail
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/VideoDto"
  /api/videos/file/stream/{id}:
    get:
      tags:
      - 동영상파일
      summary: 동영상 스트리밍
      description: HTTP Range를 지원하는 동영상 스트리밍 API 입니다.
      operationId: streamVideo
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: binary
  /api/users/my-info:
    get:
      tags:
      - 회원
      summary: 내 정보 조회
      description: JWT 인증 후 내 정보를 조회합니다.
      operationId: getMyInfo
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDto"
components:
  schemas:
    UserSignupRequest:
      required:
      - displayName
      - password
      - username
      type: object
      properties:
        username:
          type: string
          description: 로그인 ID
          example: user123
        password:
          maxLength: 30
          minLength: 8
          type: string
          description: 비밀번호(8~30자)
          example: pAssword123!
        displayName:
          type: string
          description: 별명
          example: 장국영
    UserDto:
      type: object
      properties:
        id:
          type: integer
          description: 회원 고유번호
          format: int64
          example: 1
        username:
          type: string
          description: 회원 로그인 ID
          example: user123
        displayName:
          type: string
          description: 별명/이름
          example: 장국영
        role:
          type: string
          description: 권한
          example: USER
        createdAt:
          type: string
          description: 가입일(ISO8601)
          example: 2025-06-16T10:00:00
    UserLoginRequest:
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
          description: 로그인 ID
          example: user123
        password:
          type: string
          description: 비밀번호
          example: pAssword123!
    VideoDto:
      required:
      - title
      type: object
      properties:
        id:
          type: integer
          description: 동영상 고유번호(PK)
          format: int64
          example: 1
        title:
          type: string
          description: 동영상 제목
          example: 영웅본색
        description:
          type: string
          description: 동영상 설명
          example: 홍콩 느와르의 대표작
        thumbnailUrl:
          type: string
          description: 썸네일 이미지 URL
          example: /uploads/thumb/sample.jpg
        playTime:
          type: integer
          description: 동영상 재생 시간(초)
          format: int64
          example: 5400
        uploadUserId:
          type: string
          description: 업로드한 회원 ID
          example: user123
        createdAt:
          type: string
          description: 업로드 일시(ISO8601)
          example: 2025-06-16T10:00:00
  securitySchemes:
    BearerAuth:
      type: http
      name: Authorization
      scheme: bearer
      bearerFormat: JWT
